@startuml
title GPS Hat Driver Class Diagram
namespace ros {
    class Time
}
namespace eros {
    class Logger
    class Level
}
package gps {
    struct timestamp_t
    struct timespec
note top of timestamp_t 
    ARMV7L
end note
note top of timespec 
    X86_64
end note
}

namespace ros_hats {
    class GPSHatDriver #LimeGreen {
        +bool init(Logger logger)
        +bool update(double dt)
        +{static} Level::Type get_level(StatusType type)
        +bool finish()
        +bool process_data(struct gps_data_t data);
        +GPSHatDriverContainer get_gps_data()
        +std::string pretty();
        +{static} ros::Time convert_time(timestamp_t t_)
        +{static} ros::Time convert_time(timespec t)
        +{static} string StatusTypeString(StatusType type)
        +{static} string FixTypeString(StatusType type)
    }
    enum FixType #LimeGreen {
        UNKNOWN
        NOT_SEEN
        NO_FIX
        FIX_2D
        FIX_3D
        END_OF_LIST
    }
    enum StatusType #LimeGreen {
        UNKNOWN
        NO_FIX
        FIX
        DGPS_FIX
        END_OF_LIST
    }
    struct GPSHatDriverContainer #LimeGreen {
        +Time timestamp
        +double latitude
        +double longitude
        +double altitude
        +double latitude_accuracy_m
        +double longitude_accuracy_m
        +double altitude_accuracy_m
        +FixType fix_type
        +StatusType status_type
        +{static}string pretty()
    }
    GPSHatDriver +-- FixType
    GPSHatDriver +-- StatusType
    GPSHatDriver +-- GPSHatDriverContainer
}
@enduml